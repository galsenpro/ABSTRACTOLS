# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-06-22 12:22
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chaine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameConfig', models.CharField(max_length=100)),
                ('protocole', models.CharField(choices=[('http', 'http'), ('https', 'https')], default='http', max_length=5)),
                ('port', models.PositiveIntegerField(default=5555)),
                ('intervalle', models.PositiveIntegerField(default=10)),
                ('emailFrom', models.EmailField(default='adama.dieng@orange.com', max_length=254)),
                ('smsFrom', models.CharField(default='+33768225617', max_length=13)),
                ('schemasmooth', models.FileField(upload_to='schemas/smooth/')),
                ('schemadash', models.FileField(upload_to='schemas/dash/')),
                ('nameOfLevelFile', models.CharField(default='Level', max_length=50)),
                ('folderOfLevelFile', models.CharField(default='/home/adama/PROJET/ABSTRACT/AbstractBackend/Levels/', editable=False, max_length=150)),
                ('nameOfIframeFile', models.CharField(default='Iframe', max_length=50)),
                ('folderOfIframeFile', models.CharField(default='/home/adama/PROJET/ABSTRACT/AbstractBackend/Iframe/', editable=False, max_length=150)),
                ('livefoldersmooth', models.CharField(default='/home/adama/PROJET/ABSTRACT/AbstractBackend/manifests/dynamic/MSS/Live/', editable=False, max_length=150)),
                ('catchupfoldersmooth', models.CharField(default='/home/adama/PROJET/ABSTRACT/AbstractBackend/manifests/dynamic/MSS/Catchup/', editable=False, max_length=150)),
                ('livefolderdash', models.CharField(default='/home/adama/PROJET/ABSTRACT/AbstractBackend/manifests/dynamic/DASH/Live/', editable=False, max_length=150)),
                ('catchupfolderdash', models.CharField(default='/home/adama/PROJET/ABSTRACT/AbstractBackend/manifests/dynamic/DASH/Catchup/', editable=False, max_length=150)),
                ('livefolderhls', models.CharField(default='/home/adama/PROJET/ABSTRACT/AbstractBackend/manifests/dynamic/HLS/Live/', editable=False, max_length=150)),
                ('catchupfolderhls', models.CharField(default='/home/adama/PROJET/ABSTRACT/AbstractBackend/manifests/dynamic/HLS/Catchup/', editable=False, max_length=150)),
                ('logdirectory', models.CharField(default='/home/adama/PROJET/ABSTRACT/AbstractBackend/logabstract', editable=False, max_length=150)),
                ('logprefixname', models.CharField(default='abstractLog', max_length=50)),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de creation')),
                ('commandesATraiter', multiselectfield.db.fields.MultiSelectField(choices=[('live', 'LIVE'), ('catchup', 'CATCHUP'), ('startover', 'STARTOVER'), ('vodplayout', 'VOD PLAYOUT'), ('vodprepackaged', 'VOD PREPACKAGED'), ('ntc', 'NTC'), ('npvr', 'nPVR')], max_length=57)),
                ('modesATraiter', multiselectfield.db.fields.MultiSelectField(choices=[('Audio', (('vinyl', 'Vinyl'), ('cd', 'CD'))), ('Video', (('vhs', 'VHS Tape'), ('dvd', 'DVD'))), ('unknown', 'Unknown')], max_length=19)),
            ],
        ),
        migrations.CreateModel(
            name='ListeDeMode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='ListeDePod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.CharField(default='strm.podX.manager.cdvr.orange.fr', max_length=100, unique=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de creation')),
            ],
        ),
        migrations.CreateModel(
            name='Mode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameMode', models.CharField(max_length=100)),
                ('staticAbr', models.CharField(max_length=100)),
                ('fragment', models.IntegerField(default=2)),
                ('manifestSuffix', models.CharField(max_length=10)),
                ('deviceProfil', models.CharField(max_length=10)),
                ('client', models.CharField(default='null', max_length=100)),
                ('objet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='abstract.ListeDeMode')),
            ],
        ),
        migrations.CreateModel(
            name='NameChaine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(default='Description du Noeud')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de creation')),
            ],
        ),
        migrations.CreateModel(
            name='NameNode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(default='Description du Noeud', null=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de creation')),
            ],
        ),
        migrations.CreateModel(
            name='NamePod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(default='Description du Pod', null=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de creation')),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('link', models.URLField()),
                ('datareq', models.TextField()),
                ('header', models.CharField(default="{'Content-Type': 'application/xml'}", max_length=255)),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de creation')),
            ],
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('daterequest', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de test')),
                ('link', models.URLField()),
                ('datareq', models.TextField()),
                ('status', models.CharField(max_length=10)),
                ('reason', models.CharField(max_length=255)),
                ('methode', models.CharField(max_length=100)),
                ('body', models.TextField()),
                ('header', models.CharField(max_length=255)),
                ('duree', models.CharField(max_length=255)),
                ('typetest', models.CharField(default='auto', max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='Streamer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.GenericIPAddressField(protocol='ipv4')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de creation')),
                ('node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='abstract.NameNode')),
                ('objet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='abstract.ListeDePod')),
            ],
        ),
        migrations.AddField(
            model_name='listedepod',
            name='name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='abstract.NamePod'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='pods',
            field=models.ManyToManyField(to='abstract.ListeDePod'),
        ),
        migrations.AddField(
            model_name='chaine',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='abstract.NameChaine'),
        ),
        migrations.AddField(
            model_name='chaine',
            name='objet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='abstract.ListeDePod'),
        ),
    ]
